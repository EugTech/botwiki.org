"strict";function ready(e){"loading"!==document.readyState?e():document.addEventListener("DOMContentLoaded",e)}window.smoothScroll=function(){if(void 0!==document.querySelectorAll&&void 0!==window.pageYOffset&&void 0!==history.pushState){var e=function(e){return"HTML"===e.nodeName?-window.pageYOffset:e.getBoundingClientRect().top+window.pageYOffset},t=function(e){return.5>e?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},o=function(e,o,n,a){return n>a?o:e+(o-e)*t(n/a)},n=function(t,n,a){n=n||500;var r,i=window.pageYOffset;r="number"==typeof t?parseInt(t):e(t)-100;var l=Date.now(),d=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(e){window.setTimeout(e,15)},s=function(){var e=Date.now()-l;window.scroll(0,o(i,r,e,n)),e>n?"function"==typeof a&&a(t):d(s)};s()},a=function(e){e.preventDefault();var t=this.hash.substring(1);window.history&&window.history.pushState&&history.pushState(null,null,"#"+t),n(document.getElementById(t),500,function(){})};return document.addEventListener("DOMContentLoaded",function(){for(var e,t=document.querySelectorAll('a[href^="#"]'),o=t.length;e=t[--o];)e.addEventListener("click",a,!1)}),n}}(),ready(function(){if(window.location.hash)return smoothScroll(document.getElementById(window.location.hash.substring(1)),200,function(){}),!1;for(var e,t=document.querySelectorAll(".back-to-top"),o=t.length;e=t[--o];)e.addEventListener("click",function(e){e.preventDefault(),smoothScroll(0,500)},!1);console.log("                                                                                                                    "),console.log("88888888ba                                            88  88         88                                             "),console.log('88      "8b                ,d                         ""  88         ""                                             '),console.log("88      ,8P                88                             88                                                        "),console.log("88aaaaaa8P'   ,adPPYba,  MM88MMM  8b      db      d8  88  88   ,d8   88        ,adPPYba,   8b,dPPYba,   ,adPPYb,d8  "),console.log('88""""""8b,  a8"     "8a   88     `8b    d88b    d8\'  88  88 ,a8"    88       a8"     "8a  88P\'   "Y8  a8"    `Y88  '),console.log("88      `8b  8b       d8   88      `8b  d8'`8b  d8'   88  8888[      88       8b       d8  88          8b       88  "),console.log('88      a8P  "8a,   ,a8"   88,      `8bd8\'  `8bd8\'    88  88`"Yba,   88  888  "8a,   ,a8"  88          "8a,   ,d88  '),console.log('88888888P"    `"YbbdP"\'    "Y888      YP      YP      88  88   `Y8a  88  888   `"YbbdP"\'   88           `"YbbdP"Y8  '),console.log("                                                                                                        aa,    ,88  "),console.log('                                                                                                         "Y8bbdP"   '),console.log("\nHello there! Are you a #botmaker? Join us! https://botmakers.org/\n"),console.log("Want to get more involved? https://github.com/botwiki/botwiki.org/blob/master/HELP-WANTED.md\n\n");for(var n=document.querySelectorAll("article img"),o=0,a=n.length;a>o;o++)n[o].dataset.src=n[o].src,n[o].classList.add("lazy-load");var r=document.getElementsByClassName("search-text-after-image");r.lenght&&r.classList.remove("search-text-after-image").classList.add("search-text")}),!function(){function e(e){var t=0;if(e.offsetParent){do t+=e.offsetTop;while(e=e.offsetParent);return t}}var t=window.addEventListener||function(e,t){window.attachEvent("on"+e,t)},o=window.removeEventListener||function(e,t){window.detachEvent("on"+e,t)},n={cache:[],mobileScreenSize:500,addObservers:function(){t("scroll",n.throttledLoad),t("resize",n.throttledLoad)},removeObservers:function(){o("scroll",n.throttledLoad,!1),o("resize",n.throttledLoad,!1)},throttleTimer:(new Date).getTime(),throttledLoad:function(){var e=(new Date).getTime();e-n.throttleTimer>=200&&(n.throttleTimer=e,n.loadVisibleImages())},loadVisibleImages:function(){for(var t=window.pageYOffset||document.documentElement.scrollTop,o=window.innerHeight||document.documentElement.clientHeight,a={min:t-200,max:t+o+200},r=0;r<n.cache.length;){var i=n.cache[r],l=e(i),d=i.height||0;if(l>=a.min-d&&l<=a.max){var s=i.getAttribute("data-src-mobile");i.onload=function(){this.className=this.className.replace(/(^|\s+)lazy-load(\s+|$)/,"$1lazy-loaded$2")},i.src=s&&screen.width<=n.mobileScreenSize?s:i.getAttribute("data-src"),i.removeAttribute("data-src"),i.removeAttribute("data-src-mobile"),n.cache.splice(r,1)}else r++}0===n.cache.length&&n.removeObservers()},init:function(){document.querySelectorAll||(document.querySelectorAll=function(e){var t=document,o=t.documentElement.firstChild,n=t.createElement("STYLE");return o.appendChild(n),t.__qsaels=[],n.styleSheet.cssText=e+"{x:expression(document.__qsaels.push(this))}",window.scrollBy(0,0),t.__qsaels}),t("load",function e(){for(var t=document.querySelectorAll("img[data-src]"),a=0;a<t.length;a++){var r=t[a];n.cache.push(r)}n.addObservers(),n.loadVisibleImages(),o("load",e,!1)})}};n.init()}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuMS4xNC5taW4uanMiXSwibmFtZXMiOlsicmVhZHkiLCJmbiIsImRvY3VtZW50IiwicmVhZHlTdGF0ZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJ3aW5kb3ciLCJzbW9vdGhTY3JvbGwiLCJxdWVyeVNlbGVjdG9yQWxsIiwicGFnZVlPZmZzZXQiLCJoaXN0b3J5IiwicHVzaFN0YXRlIiwiZ2V0VG9wIiwiZWxlbWVudCIsIm5vZGVOYW1lIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwiZWFzZUluT3V0Q3ViaWMiLCJ0IiwicG9zaXRpb24iLCJzdGFydCIsImVuZCIsImVsYXBzZWQiLCJkdXJhdGlvbiIsImVsIiwiY2FsbGJhY2siLCJwYXJzZUludCIsImNsb2NrIiwiRGF0ZSIsIm5vdyIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsIm1velJlcXVlc3RBbmltYXRpb25GcmFtZSIsIndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZSIsInNldFRpbWVvdXQiLCJzdGVwIiwic2Nyb2xsIiwibGlua0hhbmRsZXIiLCJldiIsInByZXZlbnREZWZhdWx0IiwiaGFzaCIsInRoaXMiLCJzdWJzdHJpbmciLCJnZXRFbGVtZW50QnlJZCIsImEiLCJpbnRlcm5hbCIsImkiLCJsZW5ndGgiLCJsb2NhdGlvbiIsImJhY2tUb1RvcExpbmtzIiwiY29uc29sZSIsImxvZyIsImFydGljbGVJbWFnZXMiLCJqIiwiZGF0YXNldCIsInNyYyIsImNsYXNzTGlzdCIsImFkZCIsImxhenlMb2FkZWRJbWFnZXMiLCJnZXRFbGVtZW50c0J5Q2xhc3NOYW1lIiwibGVuZ2h0IiwicmVtb3ZlIiwiZCIsImIiLCJvZmZzZXRQYXJlbnQiLCJvZmZzZXRUb3AiLCJhdHRhY2hFdmVudCIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZXRhY2hFdmVudCIsImMiLCJjYWNoZSIsIm1vYmlsZVNjcmVlblNpemUiLCJhZGRPYnNlcnZlcnMiLCJ0aHJvdHRsZWRMb2FkIiwicmVtb3ZlT2JzZXJ2ZXJzIiwidGhyb3R0bGVUaW1lciIsImdldFRpbWUiLCJsb2FkVmlzaWJsZUltYWdlcyIsImRvY3VtZW50RWxlbWVudCIsInNjcm9sbFRvcCIsImlubmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiZSIsIm1pbiIsIm1heCIsImYiLCJnIiwiaCIsImhlaWdodCIsImdldEF0dHJpYnV0ZSIsIm9ubG9hZCIsImNsYXNzTmFtZSIsInJlcGxhY2UiLCJzY3JlZW4iLCJ3aWR0aCIsInJlbW92ZUF0dHJpYnV0ZSIsInNwbGljZSIsImluaXQiLCJmaXJzdENoaWxkIiwiY3JlYXRlRWxlbWVudCIsImFwcGVuZENoaWxkIiwiX19xc2FlbHMiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsInNjcm9sbEJ5IiwicHVzaCJdLCJtYXBwaW5ncyI6IkFBQUEsUUFpRUEsU0FBU0EsT0FBTUMsR0FDZSxZQUF4QkMsU0FBU0MsV0FDWEYsSUFFQUMsU0FBU0UsaUJBQWlCLG1CQUFvQkgsR0FoRWxESSxPQUFPQyxhQUFlLFdBQ3RCLEdBQWlDLFNBQTlCSixTQUFTSyxrQkFBc0QsU0FBdkJGLE9BQU9HLGFBQWdELFNBQXRCQyxRQUFRQyxVQUFwRixDQUNBLEdBQUlDLEdBQVMsU0FBU0MsR0FDbEIsTUFBd0IsU0FBckJBLEVBQVFDLFVBQ0RSLE9BQU9HLFlBRVZJLEVBQVFFLHdCQUF3QkMsSUFBTVYsT0FBT0csYUFFcERRLEVBQWlCLFNBQVVDLEdBQUssTUFBUyxHQUFGQSxFQUFRLEVBQUVBLEVBQUVBLEVBQUVBLEdBQUtBLEVBQUUsSUFBSSxFQUFFQSxFQUFFLElBQUksRUFBRUEsRUFBRSxHQUFHLEdBQy9FQyxFQUFXLFNBQVNDLEVBQU9DLEVBQUtDLEVBQVNDLEdBQ3pDLE1BQUlELEdBQVVDLEVBQ0xGLEVBRUZELEdBQVNDLEVBQU1ELEdBQVNILEVBQWVLLEVBQVVDLElBRXhEaEIsRUFBZSxTQUFTaUIsRUFBSUQsRUFBVUUsR0FDdENGLEVBQVdBLEdBQVksR0FDdkIsSUFDSUYsR0FEQUQsRUFBUWQsT0FBT0csV0FHakJZLEdB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QixZQUFZdEMsR0FBR0MsRUFBRXNDLFlBQVl2QyxFQUFFd0MsV0FBV0MsUUFBUTNELEVBQUUsK0NBQStDckMsT0FBT2lHLFNBQVMsRUFBRSxHQUFHekMsRUFBRXNDLFdBQVd6RCxFQUFFLE9BQU8sUUFBU2tCLEtBQUksSUFBSSxHQUFJbEIsR0FBRXhDLFNBQVNLLGlCQUFpQixpQkFBaUJ5RSxFQUFFLEVBQUVBLEVBQUV0QyxFQUFFRyxPQUFPbUMsSUFBSSxDQUFDLEdBQUlHLEdBQUV6QyxFQUFFc0MsRUFBR2IsR0FBRUMsTUFBTW1DLEtBQUtwQixHQUFHaEIsRUFBRUcsZUFBZUgsRUFBRVEsb0JBQW9CZCxFQUFFLE9BQU9ELEdBQUUsTUFBUU8sR0FBRTRCIiwiZmlsZSI6InNjcmlwdHMuMS4xNC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcInN0cmljdFwiO1xuLypcbiAgaHR0cHM6Ly9naXRodWIuY29tL2FsaWNlbGlldXRpZXIvc21vb3RoU2Nyb2xsXG4gIE1vZGlmaWVkIGJ5IFN0ZWZhbiBCb2hhY2VrIHRvIHVzZSB0aGUgSFRNTDUgSGlzdG9yeSBBUEkuXG4qL1xud2luZG93LnNtb290aFNjcm9sbCA9IChmdW5jdGlvbigpe1xuaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCA9PT0gdm9pZCAwIHx8IHdpbmRvdy5wYWdlWU9mZnNldCA9PT0gdm9pZCAwIHx8IGhpc3RvcnkucHVzaFN0YXRlID09PSB2b2lkIDApIHsgcmV0dXJuOyB9XG52YXIgZ2V0VG9wID0gZnVuY3Rpb24oZWxlbWVudCkge1xuICAgIGlmKGVsZW1lbnQubm9kZU5hbWUgPT09ICdIVE1MJyl7XG4gICAgICByZXR1cm4gLXdpbmRvdy5wYWdlWU9mZnNldDtcbiAgICB9IFxuICAgIHJldHVybiBlbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIHdpbmRvdy5wYWdlWU9mZnNldDtcbn07XG52YXIgZWFzZUluT3V0Q3ViaWMgPSBmdW5jdGlvbiAodCkgeyByZXR1cm4gdDwwLjUgPyA0KnQqdCp0IDogKHQtMSkqKDIqdC0yKSooMip0LTIpKzE7IH07XG52YXIgcG9zaXRpb24gPSBmdW5jdGlvbihzdGFydCwgZW5kLCBlbGFwc2VkLCBkdXJhdGlvbikge1xuICAgIGlmIChlbGFwc2VkID4gZHVyYXRpb24pe1xuICAgICAgcmV0dXJuIGVuZDtcbiAgICB9IFxuICAgIHJldHVybiBzdGFydCArIChlbmQgLSBzdGFydCkgKiBlYXNlSW5PdXRDdWJpYyhlbGFwc2VkIC8gZHVyYXRpb24pOyAvLyA8LS0geW91IGNhbiBjaGFuZ2UgdGhlIGVhc2luZyBmdW50aW9uIHRoZXJlXG59O1xudmFyIHNtb290aFNjcm9sbCA9IGZ1bmN0aW9uKGVsLCBkdXJhdGlvbiwgY2FsbGJhY2spe1xuICAgIGR1cmF0aW9uID0gZHVyYXRpb24gfHwgNTAwO1xuICAgIHZhciBzdGFydCA9IHdpbmRvdy5wYWdlWU9mZnNldCxcbiAgICAgICAgZW5kO1xuICAgIGlmICh0eXBlb2YgZWwgPT09ICdudW1iZXInKSB7XG4gICAgICBlbmQgPSBwYXJzZUludChlbCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVuZCA9IGdldFRvcChlbCkgLSAxMDA7XG4gICAgfVxuICAgIHZhciBjbG9jayA9IERhdGUubm93KCk7XG4gICAgdmFyIHJlcXVlc3RBbmltYXRpb25GcmFtZSA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgfHxcbiAgICAgICAgd2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZSB8fCB3aW5kb3cud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIHx8XG4gICAgICAgIGZ1bmN0aW9uKGZuKXt3aW5kb3cuc2V0VGltZW91dChmbiwgMTUpO307XG4gICAgdmFyIHN0ZXAgPSBmdW5jdGlvbigpe1xuICAgICAgICB2YXIgZWxhcHNlZCA9IERhdGUubm93KCkgLSBjbG9jaztcbiAgICAgICAgd2luZG93LnNjcm9sbCgwLCBwb3NpdGlvbihzdGFydCwgZW5kLCBlbGFwc2VkLCBkdXJhdGlvbikpO1xuICAgICAgICBpZiAoZWxhcHNlZCA+IGR1cmF0aW9uKSB7XG4gICAgICAgICAgICBpZiAodHlwZW9mIGNhbGxiYWNrID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgY2FsbGJhY2soZWwpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApO1xuICAgICAgICB9XG4gICAgfTtcbiAgICBzdGVwKCk7XG59O1xudmFyIGxpbmtIYW5kbGVyID0gZnVuY3Rpb24oZXYpIHtcbiAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHZhciBoYXNoID0gdGhpcy5oYXNoLnN1YnN0cmluZygxKTtcbiAgICBpZiAod2luZG93Lmhpc3RvcnkgJiYgd2luZG93Lmhpc3RvcnkucHVzaFN0YXRlKXtcbiAgICAgIGhpc3RvcnkucHVzaFN0YXRlKG51bGwsIG51bGwsICcjJyArIGhhc2gpO1xuICAgIH1cbiAgICBzbW9vdGhTY3JvbGwoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaGFzaCksIDUwMCwgZnVuY3Rpb24oZWwpIHtcbiAgICB9KTtcbn07XG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwiRE9NQ29udGVudExvYWRlZFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGludGVybmFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnYVtocmVmXj1cIiNcIl0nKSwgYTtcbiAgICBmb3IodmFyIGk9aW50ZXJuYWwubGVuZ3RoOyBhPWludGVybmFsWy0taV07KXtcbiAgICAgICAgYS5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgbGlua0hhbmRsZXIsIGZhbHNlKTtcbiAgICB9XG59KTtcbnJldHVybiBzbW9vdGhTY3JvbGw7XG59KSgpO1xuXG5cbmZ1bmN0aW9uIHJlYWR5KGZuKSB7XG4gIGlmIChkb2N1bWVudC5yZWFkeVN0YXRlICE9PSAnbG9hZGluZycpe1xuICAgIGZuKCk7XG4gIH0gZWxzZSB7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignRE9NQ29udGVudExvYWRlZCcsIGZuKTtcbiAgfVxufVxuXG5yZWFkeShmdW5jdGlvbigpe1xuaWYod2luZG93LmxvY2F0aW9uLmhhc2gpIHtcbiAgc21vb3RoU2Nyb2xsKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHdpbmRvdy5sb2NhdGlvbi5oYXNoLnN1YnN0cmluZygxKSksIDIwMCwgZnVuY3Rpb24oZWwpe30pO1xuICByZXR1cm4gZmFsc2U7XG59XG5cblxudmFyIGJhY2tUb1RvcExpbmtzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmJhY2stdG8tdG9wJyksIGE7XG5cbmZvcih2YXIgaSA9IGJhY2tUb1RvcExpbmtzLmxlbmd0aDsgYSA9IGJhY2tUb1RvcExpbmtzWy0taV07KXtcbiAgICBhLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihldil7XG4gICAgICBldi5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgc21vb3RoU2Nyb2xsKDAsIDUwMCk7ICAgICAgXG4gICAgfSwgZmFsc2UpO1xufVxuXG5cblxuY29uc29sZS5sb2coJyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyk7XG5jb25zb2xlLmxvZygnODg4ODg4ODhiYSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgODggIDg4ICAgICAgICAgODggICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnKTtcbmNvbnNvbGUubG9nKCc4OCAgICAgIFwiOGIgICAgICAgICAgICAgICAgLGQgICAgICAgICAgICAgICAgICAgICAgICAgXCJcIiAgODggICAgICAgICBcIlwiICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyk7XG5jb25zb2xlLmxvZygnODggICAgICAsOFAgICAgICAgICAgICAgICAgODggICAgICAgICAgICAgICAgICAgICAgICAgICAgIDg4ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnKTtcbmNvbnNvbGUubG9nKCc4OGFhYWFhYThQXFwnICAgLGFkUFBZYmEsICBNTTg4TU1NICA4YiAgICAgIGRiICAgICAgZDggIDg4ICA4OCAgICxkOCAgIDg4ICAgICAgICAsYWRQUFliYSwgICA4YixkUFBZYmEsICAgLGFkUFBZYixkOCAgJyk7XG5jb25zb2xlLmxvZygnODhcIlwiXCJcIlwiXCI4YiwgIGE4XCIgICAgIFwiOGEgICA4OCAgICAgYDhiICAgIGQ4OGIgICAgZDhcXCcgIDg4ICA4OCAsYThcIiAgICA4OCAgICAgICBhOFwiICAgICBcIjhhICA4OFBcXCcgICBcIlk4ICBhOFwiICAgIGBZODggICcpO1xuY29uc29sZS5sb2coJzg4ICAgICAgYDhiICA4YiAgICAgICBkOCAgIDg4ICAgICAgYDhiICBkOFxcJ2A4YiAgZDhcXCcgICA4OCAgODg4OFsgICAgICA4OCAgICAgICA4YiAgICAgICBkOCAgODggICAgICAgICAgOGIgICAgICAgODggICcpO1xuY29uc29sZS5sb2coJzg4ICAgICAgYThQICBcIjhhLCAgICxhOFwiICAgODgsICAgICAgYDhiZDhcXCcgIGA4YmQ4XFwnICAgIDg4ICA4OGBcIlliYSwgICA4OCAgODg4ICBcIjhhLCAgICxhOFwiICA4OCAgICAgICAgICBcIjhhLCAgICxkODggICcpO1xuY29uc29sZS5sb2coJzg4ODg4ODg4UFwiICAgIGBcIlliYmRQXCJcXCcgICAgXCJZODg4ICAgICAgWVAgICAgICBZUCAgICAgIDg4ICA4OCAgIGBZOGEgIDg4ICA4ODggICBgXCJZYmJkUFwiXFwnICAgODggICAgICAgICAgIGBcIlliYmRQXCJZOCAgJyk7XG5jb25zb2xlLmxvZygnICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhYSwgICAgLDg4ICAnKTtcbmNvbnNvbGUubG9nKCcgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlk4YmJkUFwiICAgJyk7XG4gIGNvbnNvbGUubG9nKCdcXG5IZWxsbyB0aGVyZSEgQXJlIHlvdSBhICNib3RtYWtlcj8gSm9pbiB1cyEgaHR0cHM6Ly9ib3RtYWtlcnMub3JnL1xcbicpO1xuICBjb25zb2xlLmxvZygnV2FudCB0byBnZXQgbW9yZSBpbnZvbHZlZD8gaHR0cHM6Ly9naXRodWIuY29tL2JvdHdpa2kvYm90d2lraS5vcmcvYmxvYi9tYXN0ZXIvSEVMUC1XQU5URUQubWRcXG5cXG4nKTtcbiAgdmFyIGFydGljbGVJbWFnZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdhcnRpY2xlIGltZycpO1xuXG4gIGZvciAodmFyIGkgPSAwLCBqID0gYXJ0aWNsZUltYWdlcy5sZW5ndGg7IGkgPCBqOyBpKyspe1xuICAgIGFydGljbGVJbWFnZXNbaV0uZGF0YXNldC5zcmMgPSBhcnRpY2xlSW1hZ2VzW2ldLnNyYztcbiAgICBhcnRpY2xlSW1hZ2VzW2ldLmNsYXNzTGlzdC5hZGQoJ2xhenktbG9hZCcpOyAgICBcbiAgfVxuXG4gIHZhciBsYXp5TG9hZGVkSW1hZ2VzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc2VhcmNoLXRleHQtYWZ0ZXItaW1hZ2UnKTtcbiAgaWYgKGxhenlMb2FkZWRJbWFnZXMubGVuZ2h0KXtcbiAgICBsYXp5TG9hZGVkSW1hZ2VzLlxuICAgICAgY2xhc3NMaXN0LnJlbW92ZSgnc2VhcmNoLXRleHQtYWZ0ZXItaW1hZ2UnKS5cbiAgICAgIGNsYXNzTGlzdC5hZGQoJ3NlYXJjaC10ZXh0Jyk7XG4gIH1cbn0pO1xuXG4vLyBUT0RPOiBTaG93IGJhY2sgdG8gdG9wIGFmdGVyIHVzZXIgc2Nyb2xscyBkb3duIGEgYml0LlxuLy9cbi8vIHdpbmRvdy5vbnNjcm9sbCA9IGZ1bmN0aW9uKCkge1xuLy8gICBpZiAod2luZG93LmlubmVyV2lkdGggPiA5MTApe1xuLy8gICAgIGNoZWNrQnJlYWRjcnVtYnNQb3NpdGlvbigpO1xuLy8gICB9XG4vLyB9O1xuXG4vKiFcbiAqIExhenkgTG9hZCBJbWFnZXMgd2l0aG91dCBqUXVlcnlcbiAqIGh0dHA6Ly9rYWl6YXUuZ2l0aHViLmNvbS9MYXp5LUxvYWQtSW1hZ2VzLXdpdGhvdXQtalF1ZXJ5L1xuICpcbiAqIE9yaWdpbmFsIGJ5IE1pa2UgUHVsYXNraSAtIGh0dHA6Ly93d3cubWlrZXB1bGFza2kuY29tXG4gKiBNb2RpZmllZCBieSBLYWkgWmF1IC0gaHR0cDovL2thaXphdS5jb21cbiAqL1xuIWZ1bmN0aW9uKCl7ZnVuY3Rpb24gZChhKXt2YXIgYj0wO2lmKGEub2Zmc2V0UGFyZW50KXtkbyBiKz1hLm9mZnNldFRvcDt3aGlsZShhPWEub2Zmc2V0UGFyZW50KTtyZXR1cm4gYn19dmFyIGE9d2luZG93LmFkZEV2ZW50TGlzdGVuZXJ8fGZ1bmN0aW9uKGEsYil7d2luZG93LmF0dGFjaEV2ZW50KFwib25cIithLGIpfSxiPXdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyfHxmdW5jdGlvbihhLGIpe3dpbmRvdy5kZXRhY2hFdmVudChcIm9uXCIrYSxiKX0sYz17Y2FjaGU6W10sbW9iaWxlU2NyZWVuU2l6ZTo1MDAsYWRkT2JzZXJ2ZXJzOmZ1bmN0aW9uKCl7YShcInNjcm9sbFwiLGMudGhyb3R0bGVkTG9hZCksYShcInJlc2l6ZVwiLGMudGhyb3R0bGVkTG9hZCl9LHJlbW92ZU9ic2VydmVyczpmdW5jdGlvbigpe2IoXCJzY3JvbGxcIixjLnRocm90dGxlZExvYWQsITEpLGIoXCJyZXNpemVcIixjLnRocm90dGxlZExvYWQsITEpfSx0aHJvdHRsZVRpbWVyOihuZXcgRGF0ZSkuZ2V0VGltZSgpLHRocm90dGxlZExvYWQ6ZnVuY3Rpb24oKXt2YXIgYT0obmV3IERhdGUpLmdldFRpbWUoKTthLWMudGhyb3R0bGVUaW1lcj49MjAwJiYoYy50aHJvdHRsZVRpbWVyPWEsYy5sb2FkVmlzaWJsZUltYWdlcygpKX0sbG9hZFZpc2libGVJbWFnZXM6ZnVuY3Rpb24oKXtmb3IodmFyIGE9d2luZG93LnBhZ2VZT2Zmc2V0fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wLGI9d2luZG93LmlubmVySGVpZ2h0fHxkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0LGU9e21pbjphLTIwMCxtYXg6YStiKzIwMH0sZj0wO2Y8Yy5jYWNoZS5sZW5ndGg7KXt2YXIgZz1jLmNhY2hlW2ZdLGg9ZChnKSxpPWcuaGVpZ2h0fHwwO2lmKGg+PWUubWluLWkmJmg8PWUubWF4KXt2YXIgaj1nLmdldEF0dHJpYnV0ZShcImRhdGEtc3JjLW1vYmlsZVwiKTtnLm9ubG9hZD1mdW5jdGlvbigpe3RoaXMuY2xhc3NOYW1lPXRoaXMuY2xhc3NOYW1lLnJlcGxhY2UoLyhefFxccyspbGF6eS1sb2FkKFxccyt8JCkvLFwiJDFsYXp5LWxvYWRlZCQyXCIpfSxnLnNyYz1qJiZzY3JlZW4ud2lkdGg8PWMubW9iaWxlU2NyZWVuU2l6ZT9qOmcuZ2V0QXR0cmlidXRlKFwiZGF0YS1zcmNcIiksZy5yZW1vdmVBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKSxnLnJlbW92ZUF0dHJpYnV0ZShcImRhdGEtc3JjLW1vYmlsZVwiKSxjLmNhY2hlLnNwbGljZShmLDEpfWVsc2UgZisrfTA9PT1jLmNhY2hlLmxlbmd0aCYmYy5yZW1vdmVPYnNlcnZlcnMoKX0saW5pdDpmdW5jdGlvbigpe2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGx8fChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsPWZ1bmN0aW9uKGEpe3ZhciBiPWRvY3VtZW50LGM9Yi5kb2N1bWVudEVsZW1lbnQuZmlyc3RDaGlsZCxkPWIuY3JlYXRlRWxlbWVudChcIlNUWUxFXCIpO3JldHVybiBjLmFwcGVuZENoaWxkKGQpLGIuX19xc2FlbHM9W10sZC5zdHlsZVNoZWV0LmNzc1RleHQ9YStcInt4OmV4cHJlc3Npb24oZG9jdW1lbnQuX19xc2FlbHMucHVzaCh0aGlzKSl9XCIsd2luZG93LnNjcm9sbEJ5KDAsMCksYi5fX3FzYWVsc30pLGEoXCJsb2FkXCIsZnVuY3Rpb24gZCgpe2Zvcih2YXIgYT1kb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiaW1nW2RhdGEtc3JjXVwiKSxlPTA7ZTxhLmxlbmd0aDtlKyspe3ZhciBmPWFbZV07Yy5jYWNoZS5wdXNoKGYpfWMuYWRkT2JzZXJ2ZXJzKCksYy5sb2FkVmlzaWJsZUltYWdlcygpLGIoXCJsb2FkXCIsZCwhMSl9KX19O2MuaW5pdCgpfSgpO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9