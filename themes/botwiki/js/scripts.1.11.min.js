"strict";function checkBreadcrumbsPosition(){document.body.scrollTop+document.documentElement.scrollTop>stickyOffset?(document.body.style.paddingTop=sticky.clientHeight+"px",sticky.className="sticky"):(document.body.style.paddingTop="0",sticky.className="")}function ready(e){"loading"!==document.readyState?e():document.addEventListener("DOMContentLoaded",e)}window.smoothScroll=function(){if(void 0!==document.querySelectorAll&&void 0!==window.pageYOffset&&void 0!==history.pushState){var e=function(e){return"HTML"===e.nodeName?-window.pageYOffset:e.getBoundingClientRect().top+window.pageYOffset},t=function(e){return.5>e?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1},o=function(e,o,n,a){return n>a?o:e+(o-e)*t(n/a)},n=function(t,n,a){n=n||500;var i,r=window.pageYOffset;i="number"==typeof t?parseInt(t):window.innerWidth>910?e(t)-70:e(t);var d=Date.now(),c=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(e){window.setTimeout(e,15)},l=function(){var e=Date.now()-d;window.scroll(0,o(r,i,e,n)),e>n?"function"==typeof a&&a(t):c(l)};l()},a=function(e){e.preventDefault();var t=this.hash.substring(1);window.history&&window.history.pushState&&history.pushState(null,null,"#"+t),n(document.getElementById(t),500,function(){})};return document.addEventListener("DOMContentLoaded",function(){for(var e,t=document.querySelectorAll('a[href^="#"]'),o=t.length;e=t[--o];)e.addEventListener("click",a,!1)}),n}}();var sticky=document.getElementById("breadcrumbs-wrapper"),stickyOffset=document.getElementById("header").clientHeight;ready(function(){if(window.location.hash)return window.innerWidth>910&&checkBreadcrumbsPosition(),smoothScroll(document.getElementById(window.location.hash.substring(1)),200,function(){}),!1;for(var e,t=document.querySelectorAll(".back-to-top"),o=t.length;e=t[--o];)e.addEventListener("click",function(e){e.preventDefault(),smoothScroll(0,500)},!1);console.log("                                                                                                                    "),console.log("88888888ba                                            88  88         88                                             "),console.log('88      "8b                ,d                         ""  88         ""                                             '),console.log("88      ,8P                88                             88                                                        "),console.log("88aaaaaa8P'   ,adPPYba,  MM88MMM  8b      db      d8  88  88   ,d8   88        ,adPPYba,   8b,dPPYba,   ,adPPYb,d8  "),console.log('88""""""8b,  a8"     "8a   88     `8b    d88b    d8\'  88  88 ,a8"    88       a8"     "8a  88P\'   "Y8  a8"    `Y88  '),console.log("88      `8b  8b       d8   88      `8b  d8'`8b  d8'   88  8888[      88       8b       d8  88          8b       88  "),console.log('88      a8P  "8a,   ,a8"   88,      `8bd8\'  `8bd8\'    88  88`"Yba,   88  888  "8a,   ,a8"  88          "8a,   ,d88  '),console.log('88888888P"    `"YbbdP"\'    "Y888      YP      YP      88  88   `Y8a  88  888   `"YbbdP"\'   88           `"YbbdP"Y8  '),console.log("                                                                                                        aa,    ,88  "),console.log('                                                                                                         "Y8bbdP"   '),console.log("\nHello there! Are you a #botmaker? Join us! https://botmakers.org/\n"),console.log("Want to get more involved? https://github.com/botwiki/botwiki.org/blob/master/HELP-WANTED.md\n\n");for(var n=document.querySelectorAll("article img"),o=0,a=n.length;a>o;o++)n[o].dataset.src=n[o].src,n[o].classList.add("lazy-load");var i=document.getElementsByClassName("search-text-after-image");i.lenght&&i.classList.remove("search-text-after-image").classList.add("search-text")}),window.onscroll=function(){window.innerWidth>910&&checkBreadcrumbsPosition()},!function(){function e(e){var t=0;if(e.offsetParent){do t+=e.offsetTop;while(e=e.offsetParent);return t}}var t=window.addEventListener||function(e,t){window.attachEvent("on"+e,t)},o=window.removeEventListener||function(e,t){window.detachEvent("on"+e,t)},n={cache:[],mobileScreenSize:500,addObservers:function(){t("scroll",n.throttledLoad),t("resize",n.throttledLoad)},removeObservers:function(){o("scroll",n.throttledLoad,!1),o("resize",n.throttledLoad,!1)},throttleTimer:(new Date).getTime(),throttledLoad:function(){var e=(new Date).getTime();e-n.throttleTimer>=200&&(n.throttleTimer=e,n.loadVisibleImages())},loadVisibleImages:function(){for(var t=window.pageYOffset||document.documentElement.scrollTop,o=window.innerHeight||document.documentElement.clientHeight,a={min:t-200,max:t+o+200},i=0;i<n.cache.length;){var r=n.cache[i],d=e(r),c=r.height||0;if(d>=a.min-c&&d<=a.max){var l=r.getAttribute("data-src-mobile");r.onload=function(){this.className=this.className.replace(/(^|\s+)lazy-load(\s+|$)/,"$1lazy-loaded$2")},r.src=l&&screen.width<=n.mobileScreenSize?l:r.getAttribute("data-src"),r.removeAttribute("data-src"),r.removeAttribute("data-src-mobile"),n.cache.splice(i,1)}else i++}0===n.cache.length&&n.removeObservers()},init:function(){document.querySelectorAll||(document.querySelectorAll=function(e){var t=document,o=t.documentElement.firstChild,n=t.createElement("STYLE");return o.appendChild(n),t.__qsaels=[],n.styleSheet.cssText=e+"{x:expression(document.__qsaels.push(this))}",window.scrollBy(0,0),t.__qsaels}),t("load",function e(){for(var t=document.querySelectorAll("img[data-src]"),a=0;a<t.length;a++){var i=t[a];n.cache.push(i)}n.addObservers(),n.loadVisibleImages(),o("load",e,!1)})}};n.init()}();
//# sourceMappingURL=data:application/json;base64,